#!/bin/sh

set -e

function readlink_f {
  cd "$(dirname "$1")" > /dev/null

  local filename="$(basename "$1")"

  if [ -h "$filename" ]; then
    readlink_f "$(readlink "$filename")"
  else
    echo "`pwd -P`/$filename"
  fi
}

SELF=$(readlink_f "$0")
SCRIPT_PATH=$(dirname "$SELF")

HOSTNAME=`hostname`

SERVER_NAME=pogo
SERVER_NODE=$SERVER_NAME@$HOSTNAME
CONTROL_NODE=$SERVER_NAME$$@$HOSTNAME

function alive {
  $SCRIPT_PATH/elixir --name $CONTROL_NODE -e 'Pogo.alive! :"'$SERVER_NODE'"'

	return $?
}

function start {
	if alive; then
		echo "$SERVER_NAME is already running"
		exit 0
	fi

  if [ "$#" != 0 ]; then
    export ELIXIR_ERL_OPTS="$@"
  fi

  $SCRIPT_PATH/elixir --name $SERVER_NODE --app $SERVER_NAME --no-halt --detached

	if alive; then
		echo "$SERVER_NAME started as $SERVER_NODE";
	else
		echo "$SERVER_NAME failed to start"
	fi
}

function stop {
  if ! alive; then
    echo "$SERVER_NAME is not running (or not reachable)"
    exit 0
  fi

  $SCRIPT_PATH/elixir --name $CONTROL_NODE -pa ebin -e 'Pogo.stop :"'$SERVER_NODE'"'

  if [ $? ]; then
    echo "$SERVER_NAME has stopped"
  else
    echo "$SERVER_NAME did not stop"
  fi
}

function restart {
  if ! alive; then
    echo "$SERVER_NAME is unreachable"
    exit 1
  fi

  $SCRIPT_PATH/elixir --name $CONTROL_NODE -pa ebin -e 'Pogo.restart :"'$SERVER_NODE'"'
}

function reboot {
  if ! alive; then
    echo "$SERVER_NAME is unreachable"
    exit 1
  fi

  $SCRIPT_PATH/elixir --name $CONTROL_NODE -pa ebin -e 'Pogo.reboot :"'$SERVER_NODE'"'
}

function console {
  if alive; then
    echo "$SERVER_NAME is already running"
    exit 0
  fi

  if [ "$#" != 0 ]; then
    export ELIXIR_ERL_OPTS="$@"
  fi

  exec $SCRIPT_PATH/iex --name $SERVER_NODE --app $SERVER_NAME
}

function attach {
  if ! alive; then
    echo "$SERVER_NAME is unreachable"
    exit 1
  fi

  exec $SCRIPT_PATH/iex --remsh $SERVER_NODE --name $CONTROL_NODE
}

function status {
  if alive; then
    echo "$SERVER_NAME is running"
    exit 0
  else
    echo "$SERVER_NAME could not be reached"
    exit 1
  fi
}

case "$1" in
	start)
		shift
		start $@
		;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reboot)
    reboot
    ;;
  console)
    shift
    console $@
    ;;
  attach)
    attach
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|reboot|console|attach|status}"
    exit 1
esac

exit $?
